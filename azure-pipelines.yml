trigger:
- main
- jw-prototype-deploy-test

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '22.x'

stages:
- stage: BuildTest
  displayName: 'Build and Test'
  jobs:  
    - job: 
      steps:
      - task: UseNode@1
        inputs:
          version: $(nodeVersion)
          displayName: 'Install Node.js'

      - script: |
         npm install
        displayName: 'Install dependencies'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          contents: |
            app/**
            package.json
            usage-data-config.json
          targetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy project files'
        
      #- task: CopyFiles@2
      #  inputs:
      #    sourceFolder: '$(agent.builddirectory)'
      #    targetFolder: '$(Pipeline.Workspace)'
      #  displayName: 'Copy project files'

      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'nodejs-app'
          targetPath: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Publish pipeline artifact'

- stage: Deploy
  displayName: 'Deploy'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
    - job:
      steps:
      - task: DownloadBuildArtifacts@1
        inputs:
         buildType: 'current'
         downloadType: 'specific'
         downloadPath: '$(Pipeline.Workspace)/**/nodejs-app' #$(System.DefaultWorkingDirectory)'
      - task: AzureRmWebAppDeployment@5
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Digital Services'
          appType: 'webAppLinux'
          WebAppName: 'app-dsp-prototype'
          packageForLinux: '$(System.DefaultWorkingDirectory)/*.zip'
          RuntimeStack: 'NODE|22-lts'
          StartupCommand: 'npm run dev'
          DeploymentTypeLinux: 'oneDeploy'

